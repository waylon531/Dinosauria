import lightingProgram from "lighting.material"

vertex_program groundVS glsl
{
	source ground.vert
}

abstract fragment_program groundFS glsl : lightingProgram
{
	source ground.frag
}

fragment_program groundFSMedium glsl : groundFS
{
}

fragment_program groundFSHigh glsl : groundFS
{
	preprocessor_defines USE_NORMALMAP,
}

fragment_program groundFSExtreme glsl : groundFS
{
	preprocessor_defines USE_NORMALMAP,USE_PARALLAXMAP,
}

abstract technique groundTechnique
{
	pass groundPass
	{
		ambient 0.1 0.1 0.1 1
		diffuse 0.9 0.7 0.9 1
		specular 2.0 2.0 2.0 5
		
		vertex_program_ref groundVS
		{
		}
		
		texture_unit
		{
			texture brick-diffuse.jpg 2d
		}
		texture_unit
		{
			texture brick-bump.jpg 2d
		}
		texture_unit
		{
			texture brick-normal.jpg 2d
		}
	
	}
}

material ground
{
	receive_shadows on

	technique
	{
		scheme low
		pass
		{
			ambient 0.5 0.5 0.5
			diffuse 0.6 0.7 0.6
			texture_unit
			{
				texture brick-diffuse.jpg 2d
			}
		}
	}
	
	technique : groundTechnique
	{
		scheme medium
		pass groundPass
		{
			fragment_program_ref groundFSMedium
			{
				param_named diffuseMap int 0
			}
		}
	}

	technique : groundTechnique
	{
		scheme high
		pass groundPass
		{
			fragment_program_ref groundFSHigh
			{
				param_named diffuseMap int 0
				param_named normalMap int 2

			}
		}
	}
	
	technique : groundTechnique
	{
		scheme extreme
		pass groundPass
		{
			fragment_program_ref groundFSExtreme
			{
				param_named diffuseMap int 0
				param_named bumpMap int 1
				param_named normalMap int 2
			}
		}
	}
}